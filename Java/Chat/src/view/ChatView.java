/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import java.awt.Color;
import java.awt.Point;
import javax.swing.JOptionPane;
import javax.swing.text.DefaultCaret;
import model.ChatApplication;

/**
 *
 * @author christian
 */
public class ChatView extends javax.swing.JFrame
{

    /**
     * Creates new form ChatView
     */
    public ChatView()
    {
        initComponents();
               
        DefaultCaret dc = (DefaultCaret) this.getTaChatOutputField().getCaret();
        dc.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
    }
    
    public void setModelToDrawingPane(ChatApplication model)
    {
        this.getDrawingPane().setGraphicModel(model);
    }
    
    public void updateDrawingPane()
    {
       this.getDrawingPane().updateGraphic();
    }
    
    public void setViewStatusToDisconnected()
    {
        this.getLbConnectionStatus().setText("Status: Nicht verbunden");
        this.getLbConnectionStatus().setForeground(Color.RED);

        this.getMenuItemServer().setEnabled(true);
        this.getMenuItemClient().setEnabled(true);
        this.getMenuItemDisconnect().setEnabled(false);
    }
    
    public void setViewStatusToConnected(String text)
    {
        this.getLbConnectionStatus().setText(text);
        this.getLbConnectionStatus().setForeground(Color.GREEN);

        this.getMenuItemServer().setEnabled(false);
        this.getMenuItemClient().setEnabled(false);
        this.getMenuItemDisconnect().setEnabled(true);        
    }
    
    public void drawPoint(Point p)
    {
        this.getDrawingPane().drawPoint(p);
    }
    
    public void endLine()
    {
        this.getDrawingPane().endLine();
    }
    
    public void printDrawing()
    {
        this.getDrawingPane().printDrawing();
    }
        
    public void showErrorDialog(String title, String errorMsg)
    {
        JOptionPane.showMessageDialog(this, errorMsg, title, JOptionPane.ERROR_MESSAGE);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taChatOutputField = new javax.swing.JTextArea();
        drawingPane2 = new view.DrawingPane();
        jPanel1 = new javax.swing.JPanel();
        lbConnectionStatus = new javax.swing.JLabel();
        tfChatInputField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        btnSendMessage = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuConnection = new javax.swing.JMenu();
        menuItemServer = new javax.swing.JMenuItem();
        menuItemClient = new javax.swing.JMenuItem();
        menuItemDisconnect = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Grafisches Chat-Programm");
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setPreferredSize(new java.awt.Dimension(800, 600));

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setAutoscrolls(true);

        taChatOutputField.setEditable(false);
        taChatOutputField.setColumns(20);
        taChatOutputField.setLineWrap(true);
        taChatOutputField.setRows(5);
        taChatOutputField.setWrapStyleWord(true);
        taChatOutputField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane2.setViewportView(taChatOutputField);

        jPanel2.add(jScrollPane2);
        jPanel2.add(drawingPane2);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.BorderLayout());

        lbConnectionStatus.setForeground(java.awt.Color.red);
        lbConnectionStatus.setText("Status: Nicht Verbunden");
        jPanel1.add(lbConnectionStatus, java.awt.BorderLayout.PAGE_START);

        tfChatInputField.setMinimumSize(new java.awt.Dimension(10, 50));
        jPanel1.add(tfChatInputField, java.awt.BorderLayout.CENTER);

        btnSendMessage.setText("Nachricht senden");
        jPanel3.add(btnSendMessage);

        jPanel1.add(jPanel3, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        menuConnection.setText("Verbindung");

        menuItemServer.setText("Server erstellen");
        menuConnection.add(menuItemServer);

        menuItemClient.setText("Als Client verbinden");
        menuConnection.add(menuItemClient);

        menuItemDisconnect.setText("Verbindung trennen");
        menuItemDisconnect.setEnabled(false);
        menuConnection.add(menuItemDisconnect);

        jMenuBar1.add(menuConnection);

        setJMenuBar(jMenuBar1);

        setSize(new java.awt.Dimension(539, 306));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels() )
            {
                if( "Nimbus".equals(info.getName()) )
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(ChatView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(ChatView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(ChatView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(ChatView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new ChatView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSendMessage;
    private view.DrawingPane drawingPane2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbConnectionStatus;
    private javax.swing.JMenu menuConnection;
    private javax.swing.JMenuItem menuItemClient;
    private javax.swing.JMenuItem menuItemDisconnect;
    private javax.swing.JMenuItem menuItemServer;
    private javax.swing.JTextArea taChatOutputField;
    private javax.swing.JTextField tfChatInputField;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the btnSendMessage
     */
    public javax.swing.JButton getBtnSendMessage()
    {
        return btnSendMessage;
    }

    /**
     * @return the taChatOutputField
     */
    public javax.swing.JTextArea getTaChatOutputField()
    {
        return taChatOutputField;
    }

    /**
     * @return the tfChatInputField
     */
    public javax.swing.JTextField getTfChatInputField()
    {
        return tfChatInputField;
    }

    /**
     * @return the menuItemClient
     */
    public javax.swing.JMenuItem getMenuItemClient()
    {
        return menuItemClient;
    }

    /**
     * @return the menuItemServer
     */
    public javax.swing.JMenuItem getMenuItemServer()
    {
        return menuItemServer;
    }

    /**
     * @return the menuItemDisconnect
     */
    public javax.swing.JMenuItem getMenuItemDisconnect()
    {
        return menuItemDisconnect;
    }

    /**
     * @return the lbConnectionStatus
     */
    public javax.swing.JLabel getLbConnectionStatus()
    {
        return lbConnectionStatus;
    }

    /**
     * @return the drawingPane2
     */
    public view.DrawingPane getDrawingPane()
    {
        return drawingPane2;
    }
}
