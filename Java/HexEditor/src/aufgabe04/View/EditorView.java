/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package aufgabe04.View;

import javax.swing.JOptionPane;

/**
 *
 * @author nobody
 */
public class EditorView extends javax.swing.JFrame
{
  /**
   * Creates new form EditorView
   */
  public EditorView()
  {
    initComponents();
  }

  public void showError(String exp)
  {
      JOptionPane.showMessageDialog(this, exp);
  }
  
  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        pumEditor = new javax.swing.JPopupMenu();
        pumCopy = new javax.swing.JMenuItem();
        pumPaste = new javax.swing.JMenuItem();
        fcEditor = new javax.swing.JFileChooser();
        tbToolBar = new javax.swing.JToolBar();
        btnOpen = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        spEditor = new javax.swing.JScrollPane();
        taEditor = new javax.swing.JTextArea();
        lbEditor = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();

        pumCopy.setText("Copy");
        pumEditor.add(pumCopy);

        pumPaste.setText("Paste");
        pumEditor.add(pumPaste);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hex-Editor");

        tbToolBar.setRollover(true);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, pumEditor, org.jdesktop.beansbinding.ObjectProperty.create(), tbToolBar, org.jdesktop.beansbinding.BeanProperty.create("componentPopupMenu"));
        bindingGroup.addBinding(binding);

        btnOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Open24.gif"))); // NOI18N
        btnOpen.setToolTipText("Open file");
        btnOpen.setFocusable(false);
        btnOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tbToolBar.add(btnOpen);
        btnOpen.getAccessibleContext().setAccessibleName("");

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Save24.gif"))); // NOI18N
        btnSave.setToolTipText("Save file");
        btnSave.setFocusable(false);
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tbToolBar.add(btnSave);

        getContentPane().add(tbToolBar, java.awt.BorderLayout.PAGE_START);

        taEditor.setColumns(20);
        taEditor.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        taEditor.setRows(5);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, pumEditor, org.jdesktop.beansbinding.ObjectProperty.create(), taEditor, org.jdesktop.beansbinding.BeanProperty.create("componentPopupMenu"));
        bindingGroup.addBinding(binding);

        spEditor.setViewportView(taEditor);

        getContentPane().add(spEditor, java.awt.BorderLayout.CENTER);
        getContentPane().add(lbEditor, java.awt.BorderLayout.PAGE_END);

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Open24.gif"))); // NOI18N
        openMenuItem.setMnemonic('O');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);
        openMenuItem.getAccessibleContext().setAccessibleName("open");

        saveMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Save24.gif"))); // NOI18N
        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        copyMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        copyMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Copy24.gif"))); // NOI18N
        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        pasteMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Paste24.gif"))); // NOI18N
        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        menuBar.add(editMenu);

        setJMenuBar(menuBar);

        bindingGroup.bind();

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-422)/2, (screenSize.height-365)/2, 422, 365);
    }// </editor-fold>//GEN-END:initComponents

  /**
   * @param args the command line arguments
   */
  public static void main(String args[])
  {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try
    {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
      {
        if ("Nimbus".equals(info.getName()))
        {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    }
    catch (ClassNotFoundException ex)
    {
      java.util.logging.Logger.getLogger(EditorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (InstantiationException ex)
    {
      java.util.logging.Logger.getLogger(EditorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (IllegalAccessException ex)
    {
      java.util.logging.Logger.getLogger(EditorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (javax.swing.UnsupportedLookAndFeelException ex)
    {
      java.util.logging.Logger.getLogger(EditorView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable()
    {
      public void run()
      {
        new EditorView().setVisible(true);
      }
    });
  }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnSave;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JFileChooser fcEditor;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel lbEditor;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem pumCopy;
    private javax.swing.JPopupMenu pumEditor;
    private javax.swing.JMenuItem pumPaste;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JScrollPane spEditor;
    private javax.swing.JTextArea taEditor;
    private javax.swing.JToolBar tbToolBar;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

  /**
   * @return the btnOpen
   */
  public javax.swing.JButton getBtnOpen()
  {
    return btnOpen;
  }

  /**
   * @return the btnSave
   */
  public javax.swing.JButton getBtnSave()
  {
    return btnSave;
  }

  /**
   * @return the openMenuItem
   */
  public javax.swing.JMenuItem getOpenMenuItem()
  {
    return openMenuItem;
  }

  /**
   * @return the saveMenuItem
   */
  public javax.swing.JMenuItem getSaveMenuItem()
  {
    return saveMenuItem;
  }

  /**
   * @return the taEditor
   */
  public javax.swing.JTextArea getTaEditor()
  {
    return taEditor;
  }

  /**
   * @return the fcEditor
   */
  public javax.swing.JFileChooser getFcEditor()
  {
    return fcEditor;
  }

    /**
     * @return the lbEditor
     */
    public javax.swing.JLabel getLbEditor() {
        return lbEditor;
    }

    /**
     * @return the spEditor
     */
    public javax.swing.JScrollPane getSpEditor() {
        return spEditor;
    }

    /**
     * @return the copyMenuItem
     */
    public javax.swing.JMenuItem getCopyMenuItem() {
        return copyMenuItem;
    }

    /**
     * @return the pasteMenuItem
     */
    public javax.swing.JMenuItem getPasteMenuItem() {
        return pasteMenuItem;
    }

    /**
     * @return the pumCopy
     */
    public javax.swing.JMenuItem getPumCopy() {
        return pumCopy;
    }

    /**
     * @return the pumPaste
     */
    public javax.swing.JMenuItem getPumPaste() {
        return pumPaste;
    }
}
